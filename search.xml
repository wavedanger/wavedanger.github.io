<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[html5总结]]></title>
    <url>%2F2019%2F05%2F09%2Fhtml5%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[语法 DOCTYPE 与字符编码 不区分大小写 布尔值 省略引号 可以进行省略的标签 虽说 html5 人性化了很多，但我们还是要按照一定的标准来书写 新增和删除标签 新增的结构标签 12345678&lt;section&gt;&lt;/section&gt;&lt;article&gt;&lt;/article&gt;&lt;aside&gt;&lt;/aside&gt;&lt;header&gt;&lt;/header&gt;&lt;hgroup&gt;&lt;/hgroup&gt;&lt;footer&gt;&lt;/footer&gt;&lt;nav&gt;&lt;/nav&gt;&lt;figure&gt;&lt;/figure&gt; 新增的媒体标签 123&lt;video src=&quot;movie.ogg&quot; controls=&quot;controls&quot;&gt;video标签&lt;/video&gt;&lt;audio src=&quot;music.wav&quot;&gt;&lt;/audio&gt;&lt;embed src=&quot;flash.swf&quot;/&gt; 新增表单控件标签 123&lt;input type=&quot;value&quot;/&gt;value=[email,url,number,range,Date Pickers,search,color]Date Pickers=[date,month,week,time,datetime,datetime-local] 新增的其它标签 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;mark&gt;高亮&lt;/mark&gt;&lt;progress max=&quot;100&quot; value=&quot;85&quot;&gt;&lt;span&gt;85&lt;/span&gt;&quot;%&quot;&lt;/progress&gt;&lt;time datetime=&quot;2019-05-09T09:00z&quot; pubdate&gt;9:00&lt;/time&gt;&lt;ruby&gt; 汉 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;Han&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; 字 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;zi&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;wbr&gt;软换行软换行软换行软换行软换行软换行&lt;/wbr&gt;&lt;canvas id=&quot;myCanvas&quot;&gt;&lt;/canvas&gt;&lt;script type=&quot;text/javascript&quot;&gt;var canvas=document.getElementById(&apos;myCanvas&apos;);var ctx=canvas.getContext(&apos;2d&apos;);ctx.fillStyle=&apos;#FF0000&apos;;ctx.fillRect(0,0,80,100);&lt;/script&gt;&lt;menu&gt;&lt;command type=&quot;command&quot; label=&quot;Save&quot; onclick=&quot;save()&quot;&gt;Save&lt;/command&gt;&lt;/menu&gt;&lt;details&gt;&lt;summary&gt;Copyright 1999-2011.&lt;/summary&gt;&lt;p&gt; - by Refsnes Data. All Rights Reserved.&lt;/p&gt;&lt;p&gt;All content and graphics on this web site are the property of the company Refsnes Data.&lt;/p&gt;&lt;/details&gt;&lt;input list=&quot;browsers&quot;&gt;&lt;datalist id=&quot;browsers&quot;&gt; &lt;option value=&quot;Internet Explorer&quot;&gt; &lt;option value=&quot;Firefox&quot;&gt; &lt;option value=&quot;Chrome&quot;&gt; &lt;option value=&quot;Opera&quot;&gt; &lt;option value=&quot;Safari&quot;&gt;&lt;/datalist&gt;&lt;form action=&quot;demo_keygen.asp&quot; method=&quot;get&quot;&gt; 用户名: &lt;input type=&quot;text&quot; name=&quot;usr_name&quot;&gt; 加密: &lt;keygen name=&quot;security&quot;&gt; &lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;form oninput=&quot;x.value=parseInt(a.value)+parseInt(b.value)&quot;&gt;0&lt;input type=&quot;range&quot; id=&quot;a&quot; value=&quot;50&quot;&gt;100+&lt;input type=&quot;number&quot; id=&quot;b&quot; value=&quot;50&quot;&gt;=&lt;output name=&quot;x&quot; for=&quot;a b&quot;&gt;&lt;/output&gt;&lt;/form&gt;&lt;menu label=&quot;File&quot;&gt; &lt;button type=&quot;button&quot; onclick=&quot;file_new()&quot;&gt;New...&lt;/button&gt; &lt;button type=&quot;button&quot; onclick=&quot;file_open()&quot;&gt;Open...&lt;/button&gt; &lt;button type=&quot;button&quot; onclick=&quot;file_save()&quot;&gt;Save&lt;/button&gt;&lt;/menu&gt;&lt;bdi&gt; 标签允许您设置一段文本，使其脱离其父元素的文本方向设置。&lt;/bdi&gt;&lt;dialog open&gt;This is an open dialog window&lt;/dialog&gt;&lt;meter value=&quot;2&quot; min=&quot;0&quot; max=&quot;10&quot;&gt;2 out of 10&lt;/meter&gt;&lt;br&gt;&lt;meter value=&quot;0.6&quot;&gt;60%&lt;/meter&gt;&lt;audio&gt;&lt;source src=&quot;forrest_gump.ogg&quot; type=&quot;video/ogg&quot;&gt;&lt;track src=&quot;subtitles_en.vtt&quot; kind=&quot;subtitles&quot; srclang=&quot;en&quot;label=&quot;English&quot;&gt;&lt;/audio&gt; 删除的标签 能用 css 代替的标签 不再使用 frame 框架 只有部分浏览器支持的标签 其它废除的标签 新增和废除的属性 新增属性 123456789101112131415&lt;html manifest=&quot;cache.manifest&quot;&gt;//定义离线文件&lt;link rel=&quot;icon&quot; href=&quot;demo.gif&quot; size=&quot;16X16&quot;&gt;//选项卡图标大小&lt;base href=&quot;http://localhost/&quot;&gt;//默认相对路径前缀&lt;script defer&gt;&lt;/script&gt;//延迟&lt;script async&gt;&lt;/script&gt;//异步&lt;a media=&quot;handheld&quot; href=&quot;#&quot;&gt;手持&lt;/a&gt;//为手持设备优化&lt;a media=&quot;tv&quot; href=&quot;#&quot;&gt;电视&lt;/a&gt;// 为电视设备优化&lt;a href=&quot;http://wavedanger.top&quot; hreflang=&quot;zh&quot; ref=&quot;external&quot;&gt;慕课网&lt;/a&gt;&lt;ol start=&quot;50&quot; reversed&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Coffee&lt;/li&gt;&lt;/ol&gt;//序号开始，倒序&lt;style type=&quot;text&quot; scoped&gt;h1&#123;color:red;&#125;&lt;/style&gt;//局域化css&lt;iframe seamless srcdoc=&quot;&lt;h1&gt;hello&lt;/h1&gt;&quot; sandbox src=&quot;wavedanger.top&quot;&gt;&lt;/iframe&gt;//无边距，无框；内嵌框架内容（忽略src）；严格安全限制 废除属性 可以用 css 代替的属性 多余属性 其它属性 全局属性1234567data-yourvalue//自定义属性hidden//隐藏Spellcheck//语法检查tabindex//自定义tab顺序contenteditable//可选内容可编辑designMode//全页面可编辑&lt;script&gt;window.document.designMode=&quot;on&quot;;&lt;/script&gt; 音乐推荐]]></content>
      <categories>
        <category>html5</category>
      </categories>
      <tags>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[经典镜头分享]]></title>
    <url>%2F2018%2F10%2F31%2F%E7%BB%8F%E5%85%B8%E9%95%9C%E5%A4%B4%E5%88%86%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[缘由 好久没写文章了，突然一来就想分享一下四个经典镜头！ 正文 林青霞 邱淑贞 张敏 朱茵 后记 接下来会越来越忙，毕竟要毕业了，keep moving！]]></content>
      <tags>
        <tag>movie</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JSON小见解]]></title>
    <url>%2F2018%2F08%2F28%2Fjson%E5%B0%8F%E8%A7%81%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[前言 一直对json半知半解，来谈一谈吧。 这是我写完这篇文章的感受————无眼看!（写在close前，哎） 正文1. 格式JSON 最基本的格式为数组对象:1234567&#123;&quot;heros&quot;:[ &#123;&quot;name&quot;:&quot;麦克雷&quot;,&quot;skills&quot;:&quot;午时已到&quot;&#125;, &#123;&quot;name&quot;:&quot;半藏&quot;,&quot;skills&quot;:&quot;竜が我が敌を喰らおう&quot;&#125;, &#123;&quot;name&quot;:&quot;源氏&quot;,&quot;skills&quot;:&quot;竜神の剣を喰らえ&quot;&#125;//这里其实就是一个对象 ]&#125; 2. 访问/修改/删除123456789hero=&#123; &quot;name&quot; : &quot;末日铁拳&quot;， &quot;from&quot; : &quot;黑爪&quot;, &quot;skills&quot; :&#123; &quot;skill1&quot;:&quot;火箭重拳&quot;, &quot;skill2&quot;:&quot;上勾拳&quot;, &quot;skill3&quot;:&quot;毁天灭地&quot; &#125;&#125; 以上可以用如下进行访问/修改/删除1234x=hero.skills.skill1;//访问1x=hero.skills[&quot;skill1&quot;];//访问2hero.skills[&quot;skill1&quot;]=&quot;碎地猛击&quot;;//修改delete hero.skills.skill1//删除 3. 我所认为的最基础实用例子其实JSON只要能取到对应的值，操作与其它语言操作无差12345678overwatch=&#123; &quot;name&quot;:&quot;守望先锋&quot;, &quot;year&quot;:2015, &quot;heros&quot;:[ &#123;&quot;name&quot;:&quot;温斯顿&quot;,&quot;skills&quot;:[&quot;特斯拉炮&quot;,&quot;喷射背包&quot;,&quot;原始暴怒&quot;]&#125;, &#123;&quot;name&quot;:&quot;源氏&quot;,&quot;skills&quot;:[&quot;影&quot;,&quot;闪&quot;,&quot;灵&quot;]&#125; ]&#125; 接下来用for循环来输出heros123456for(i in overwatch.heros)&#123; x += &quot;&lt;h1&gt;&quot;+ overwatch.heros[i].name +&quot;&lt;/h1&gt;&quot;; for(j in overwatch.heros[i].skills)&#123; x += overwatch.heros[i].skills[j] + &quot;&lt;br&gt;&quot;; &#125;&#125; 4. JSON.parse()JSON.parse()是用来将数据转换为 JavaScript 对象，首先我们要确保我们的JSON有效，可用如下检测菜鸟教程标准JSON检测 12345&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;&lt;script&gt; var obj=JSON.parse(&apos;&#123;&quot;name&quot;:&quot;源氏&quot;,&quot;skills&quot;:[&quot;影&quot;,&quot;闪&quot;,&quot;灵&quot;]&#125;&apos;); document.getElementById(&quot;demo&quot;).innerHTML=obj.name;//输出名字&lt;/script&gt; 由于JSON不能存储Date对象，所以需要将其转为字符串后再转为Date对象123var obj=JSON.parse(&apos;&#123;&quot;name&quot;:&quot;源氏&quot;,&quot;initDate&quot;:&quot;2018-08-28&quot;&#125;&apos;);obj.initDate=new Date(obj.initDate);document.getElementById(&quot;demo&quot;).innerHTML=obj.name+&quot;&quot;+obj.initDate;//输出名字和日期 另JSON也无法解析函数，李可以这样做123var obj=JSON.parse(&apos;&#123;&quot;name&quot;:&quot;源氏&quot;,&quot;initFunction&quot;:&quot;function()&#123;return 26;&#125;&quot;&#125;&apos;);obj.initFunction=eval(&quot;(&quot;+obj.initFunction+&quot;)&quot;);document.getElementById(&quot;demo&quot;).innerHTML=obj.name+&quot;是守望先锋&quot;+obj.initFunction()+&quot;个英雄中的一个&quot;; 5. JSON.stringify()JSON.stringify()是用来将对象转为字符串12var obj=JSON.stringify(&apos;&#123;&quot;name&quot;:&quot;源氏&quot;,&quot;skills&quot;:[&quot;影&quot;,&quot;闪&quot;,&quot;灵&quot;]&#125;&apos;);document.getElementById(&quot;demo&quot;).innerHTML=obj;//输出字符串 6.关于使用JSON.parse还是eval(“()”)这里推荐一篇博文JSON.parse与eval的区别 后记mark完这篇文，我发现我已经记不清写了什么。。。 音乐推荐]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JSON</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[走近canvas，走近艺术]]></title>
    <url>%2F2018%2F08%2F01%2F%E8%B5%B0%E8%BF%91canvas%EF%BC%8C%E8%B5%B0%E8%BF%91%E8%89%BA%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[前言 canvas是画布，只要有想象力，没有什么不能画的！ 正文1. 创建画布1&lt;canvas width=&quot;600&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;//注意这里的宽高不能加px 2. 作画准备12var c=document.querySelector(&quot;canvas&quot;);//获取画布var ctx=c.getContext(&quot;2d&quot;);//2D作画 3. 开始作画-直线12345ctx.moveTo(100,100);//起点坐标ctx.lineTo(300,100);//终点坐标ctx.strokeStyle=&quot;red&quot;;//颜色ctx.lineWidth=&quot;10&quot;//粗度ctx.stroke();//作画 4. 开始作画-三角形123456789ctx.moveTo(100,100);ctx.lineTo(500,400);ctx.lineTo(100,400);ctx.lineTo(100,100); ctx.strokeStyle=&quot;blue&quot;; ctx.lineWidth=10; ctx.lineJoin=&quot;round&quot;//round bevel miter 连接处样式 ctx.lineCap=&quot;round&quot;//butt round square 头部样式 ctx.stroke(); 5. 开始作画-矩形12345678910ctx.moveTo(100,100);ctx.lineTo(200,100);ctx.lineTo(200,200);ctx.lineTo(100,200);ctx.closePath();//最后补边，与ctx.lineTo(100,100);效果一样ctx.stroke();ctx.beginPath();//开始新路径，不加的话会与上面重叠影响ctx.fillStyle=&quot;green&quot;; ctx.fillRect(100,100,100,100);//与上矩形相同,四个参数为：x,y,width,heightctx.stroke(); 6. 线性渐变12345678 var lgd=ctx.createLinearGradient(100,100,500,100);//x,y,x2,y2渐变方向及长度lgd.addColorStop(0,&quot;red&quot;);//0为开始，1为结束，0到1之间渐变lgd.addColorStop(1,&quot;blue&quot;);ctx.strokeStyle=lgd;ctx.moveTo(100,100);ctx.lineTo(500,100);ctx.lineWidth=10;ctx.stroke(); 7. 径向渐变123456 var rgd=ctx.createRadialGradient(200,150,20,200,150,100);//xStart, yStart, radiusStart, xEnd, yEnd, radiusEndrgd.addColorStop(0,&quot;red&quot;);rgd.addColorStop(0.5,&quot;green&quot;);rgd.addColorStop(1,&quot;blue&quot;);ctx.fillStyle =rgd;//填充渐变ctx.fillRect(50,0,300,300); 8. 非零环绕123456789101112131415ctx.beginPath();ctx.moveTo(100,100);//逆时针画矩形ctx.lineTo(100,300);ctx.lineTo(300,300);ctx.lineTo(300,100);ctx.closePath();ctx.moveTo(150,150);//顺时针画矩形ctx.lineTo(250,150);ctx.lineTo(250,250);ctx.lineTo(150,250);ctx.closePath();ctx.stroke();ctx.fillStyle=&quot;red&quot;;//正反填充间隔ctx.fill(); 9. 绘制虚线1234ctx.moveTo(100,50);ctx.lineTo(400,50);ctx.setLineDash([10,20]);//[&quot;-&quot;,&quot; &quot;]ctx.stroke(); 10. 绘制文本123456789ctx.font=&quot;50px 全新硬笔行书简&quot;;ctx.textAlign=&quot;center&quot;;ctx.textBaseline=&quot;middle&quot;;ctx.shadowColor=&quot;red&quot;;ctx.shadowOffsetX=15;ctx.shadowOffsetY=5;ctx.shadowBlur=5;// ctx.strokeText(&quot;浪险&quot;,300,200);ctx.fillText(&quot;浪险&quot;,300,200); 11. 绘制图片12345678ctx.beginPath();var img=document.createElement(&quot;img&quot;);img.src=&quot;http://img5.imgtn.bdimg.com/it/u=415293130,2419074865&amp;fm=27&amp;gp=0.jpg&quot;;img.onload=function()&#123; // ctx.drawImage(img,100,100,200,100); ctx.drawImage(img,100,100,100,100,100,100,100,100);&#125; 12. 其它123456ctx.beginPath();ctx.translate(100,100);//画布偏移x,yctx.rotate( Math.PI/6 );//旋转Math.PI/6ctx.scale(0.5,1);//缩放x,y倍ctx.arc(200,200,50,0,2*Math.PI,false);//画弧x,y,半径,startX,endX,方向ctx.stroke(); 后记 哇，这篇写得赶，将就下！]]></content>
      <categories>
        <category>html5</category>
      </categories>
      <tags>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[html5的一些见解2]]></title>
    <url>%2F2018%2F08%2F01%2Fhtml5%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%81%E8%A7%A32%2F</url>
    <content type="text"><![CDATA[前言 目前这是篇死文，我也忘记我当初要写什么了！ 正文1. html5定位2. 本地存储 sessionStorage localStorage]]></content>
      <categories>
        <category>html5</category>
      </categories>
      <tags>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[html5的一些见解]]></title>
    <url>%2F2018%2F07%2F27%2Fhtml5%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%81%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[前言 接触html5已经有一段时间了，但是学得比较零散，一直没有总结，那么接下来呢，来讲一下我的一些见解。 正文1. 解决IE8的不兼容html51234567891011//解决方式一//在该标签的css中设置该标签的display:block;&lt;style type=&quot;text/css&quot;&gt; header&#123; display:block;&#125;&lt;style&gt;//通过DOM的方式创建这个标签document.creatElement(&quot;header&quot;);&lt;script&gt; document.creatElement(&quot;header&quot;);&lt;/script&gt; 123456//解决方式二//引入外部html5shiv.js&lt;!-- [if lte IE 8] --&gt;&lt;script src=&quot;https://cdn.bootcss.com/html5shiv/r29/html5.js&quot;&gt;&lt;/script&gt;&lt;![endif] --&gt;//直接使用&lt;header&gt;&lt;/header&gt;即可 2.解决audio,video谷歌浏览器无法自动播放12//解决方式：添加muted属性，但会禁音&lt;audio controls loop autoplay muted&gt;&lt;/audio&gt; 3. 自定义标签属性123456//设置自定义属性值：data-名字//获取自定义属性的值：dataset属性&lt;div data-name=&quot;wave&quot; id=&quot;dv&quot;&gt;&lt;div&gt;var dt=document.querySelector(&quot;#dv&quot;).dataset;console.log(dt.name);console.log(dt[&quot;name&quot;]); 4. 获取文件并显示12345678910111213141516171819//这里以图片为例，请随便上传一张图片&lt;div&gt; &lt;input type=&quot;file&quot; id=&quot;f1&quot;&gt; &lt;div id=&quot;show&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt; var f1=document.querySelector(&quot;#f1&quot;);//获取上传对象 f1.onchange=function()&#123; var fl1=this.files[0];//获取上传文件 var fReader=new FileReader();//创建读取对象 fReader.readAsDataURL(fl1);//读取文件 fReader.onload=function()&#123; var img=document.createElement(&quot;img&quot;);//创建图片标签 var result=fReader.result;//获取结果 img.src=result;//获取路径 document.querySelector(&quot;#show&quot;).appendChild(img);//放到div上 &#125;; &#125; &lt;/script&gt; 5. 网络状态检测12345678910111213141516&lt;script type=&quot;text/javascript&quot;&gt; //html5网络状态检测 var state=window.navigator.onLine; if(state)&#123; console.log(&quot;在线的&quot;); &#125;else&#123; console.log(&quot;不在线&quot;); &#125; //连网没网分别立刻触发 window.ononline=function()&#123; console.log(&quot;连上了&quot;); &#125;; window.onoffline=function()&#123; console.log(&quot;掉线了&quot;); &#125;;&lt;/script&gt;]]></content>
      <categories>
        <category>html5</category>
      </categories>
      <tags>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git四个阶段的撤消更改]]></title>
    <url>%2F2018%2F07%2F23%2Fgit%E5%9B%9B%E4%B8%AA%E9%98%B6%E6%AE%B5%E7%9A%84%E6%92%A4%E6%B6%88%E6%9B%B4%E6%94%B9%2F</url>
    <content type="text"><![CDATA[前言 我们常常在沉迷于git提交时的一发入魂，但常常却事与愿违，这时就需要后悔药，下面请让我们带你们了解下配方及使用说明！ 正文 基本概念——直角三角形 4个区 如上图所示，这里有四个区： 工作区 暂存区 本地仓库 远程仓库 3个步骤 如上图所示，三个步骤对应三个区： 123git addgit commit -m &quot;message&quot;git push 5种状态 未修改 ——原始状态 已修改 ——已更改内容 已暂存 ——git add 已提交 ——git commit 已推送 ——git push 检查修改 在这里我们给个例子来演示如何检查修改。如上图所示，我们在D盘建了个仓库，并新建了readme.txt，内容为”git的四个撤消修改”。 已修改，未暂存现在我们修改文本内容，在其后加上“学会了吗？”保存，运行1git diff //显示修改差异 已暂存，未提交123git add readme.txt//提交git diff//没反应git diff --cached//如下图，显示出暂存区与工作区之间的差异 已提交，未推送123git commit -m &quot;modify readme.txt&quot;//提交修改git diff --cached//无变化git diff master origin/master//显示暂存区与本地仓库之间的差异 撤消修改那么检查完修改，就来学下撤消吧。 已修改，未暂存如果我们只是在编辑器修改了文件，但还没有执行git add,这时我们的文件还在工作区，并没有进入暂存区。那么： 1git checkout 或者 1git reset --hard 已暂存，未提交如果我们git add了，但是没有git commit，那么： 12git resetgit checkout 或者 1git reset --hard//与上一样，通用 已提交，未推送如果你单身太久，你既执行了git add，又执行了git commit，那么： 1git reset --hard origin/master//与上相比，多了origin/master而已 已推送如果你单身寂寞太久，你git add,git commit,连git push都不放过，那么： 12git reset --hard HEAD^//恢复本地仓库git push -f//强制push到远程仓库，但不提倡，毕竟会覆盖变更，而且听说还会被打 1扩充：git reset --hard id//恢复到指定版本号,可通过git log查询id 总结其实四种状态的撤消我们都用到了git reset –hard,前两种还是一样的，所以你懂的。还有关于git push撤消可以用git revert，我们下篇文章再聊,88!]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git常见命令]]></title>
    <url>%2F2018%2F07%2F17%2Fgit%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[前言 今天介绍下git的常见命令吧 创建空目录1$ mkdir name //name为空目录名称 显示当前目录1$ pwd 初始化文件夹，变为git仓库1$ git init 添加文件到仓库1$ git add file//file表示添加的文本文件，已存在的 提交文件到仓库1$ git commit -m &quot;message&quot; //message为提交解释信息，可以不写，但不建议，你或许觉得跟git add相似，不同是一次commit可以有多个add 查看仓库状态1$ git status 查看上次提交1$ git diff 查看历史记录1$ git log --pretty=oneline// --pretty=oneline可不加，记录多可加 版本回退123$ git reset --hard HEAD^ // 一个^表示一个版本，此处表示回退一个版本$ git reset --hard HEAD^^//回退两个版本$ git reset --hard HEAD~50 //记录数多可用~，此处表示回退50个版本 版本回退复原1$ git reset --hard 3f10c888e//这里的3f10c888e为版本id，只要回退时的窗口无关闭，就可通过id复原！而且id不用写全，写前几位就行！ 后记 这里推荐廖雪峰老师的git教程点我跳转]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo配置404页面]]></title>
    <url>%2F2018%2F07%2F16%2Fhexo%E9%85%8D%E7%BD%AE404%E9%A1%B5%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[前言 偷懒了一个周末，今天来分享一下如何在hexo配置404页面，希望大家喜欢！ 正文 这里有两步要走 将404.html直接放在我们主题文件夹下。 直接访问博客，并修改后缀为404.html或者不存在的后缀就可以看到效果。 例子 由于我是用了hexo的next主题，所以我将404.html放在了D:\blog\themes\next\source中,blog为我的博客根目录： 我们来测试下，运行hexo server -d本地调试。输入localhost 输入 localhost:4000/404得到： 输入 localhost:4000/403： 为什么会出现这种情况，原来是因为只有顶级域名才可以支持localhost:4000/403这种操作，以下是博主绑定到域名wavedanger.top后的结果。输入 wavedanger.top/403，得到： 拓展404.html可以直接用腾迅的公益404，直接将以下代码拷贝到404.html就行了1&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; 后记 是不是很简单呢，今天推荐一首歌曲，希望大家喜欢！]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅谈html水平垂直居中]]></title>
    <url>%2F2018%2F07%2F13%2F%E6%B5%85%E8%B0%88html%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%2F</url>
    <content type="text"><![CDATA[吹水 嗯哼，关于html水平垂直居中是非常重要的，也是经常用到的，以下是个人见解，希望对你们有用！ 正文 行内水平居中说明：一般采用text-align:center代码： 123456.center&#123; text-align:center; border:1px solid red; width:200px; height:100px;&#125; 效果： 行内元素水平居中 行内垂直居中说明：采用line-height或者display:table-cell;加上vertical-align:middle;代码：12345678910111213.middle&#123; border:1px solid red; width:200px; height:100px; line-height:100px;//高度必需与height相同&#125;.middle2&#123; border:1px solid red; width:200px; height:100px; display:table-cell; vertical-align: middle; &#125; 效果: 行内元素垂直居中 行内水平垂直居中说明：这里就不作例子了，上面综合起来就是了！ 块元素水平居中(margin)说明：使用margin: 0 auto代码： 12345678910.father&#123; border:1px solid green; width:400px; height:200px;&#125;.block1&#123; margin:0 auto;//我在这里，我是关键 border:1px solid blue; width:100px;&#125; 效果： 块内元素水平居中 块水平垂直居中 absolute说明：使用绝对布局代码： 123456789101112131415.father&#123; border:1px solid green; width:400px; height:200px; position:relative;//我是前提，毕竟我是father&#125;.block2&#123; border:1px solid blue; width:100px; height:50px; position:absolute;//我是前提2，绝对布局 top:50%;//向下偏移 left:50%;//向右偏移 margin:-25px 0px 0px -50px;//第一参数为width/2，第四参数为height/2&#125; 效果： 块水平垂直居中 absolute+css3说明：使用绝对布局和css3 transform，与上面相比的优点是不用规定自身width，height代码： 123456789101112131415.father&#123; border:1px solid green; width:400px; height:100px; position:relative;//我是前提，毕竟我是father&#125;.block2&#123; border:1px solid blue; width:100px; height:50px; position:absolute;//我是前提2，绝对布局 top:50%;//向下偏移 left:50%;//向右偏移 transform:translate(-50%,-50%);//自身偏移&#125; 效果： 块水平垂直居中 写在后面 加油！我一定要坚持！]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>垂直水平居中</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown语法简介]]></title>
    <url>%2F2018%2F07%2F12%2Fmarkdown%E8%AF%AD%E6%B3%95%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[缘由 这是我第一次写博客文章，还是有些小激动的哈。从大二开始就是想搞个博客，然而因为种种原因，主要还是懒哈。 之前也建过一个博客是在阿里云申请了个免费的服务器，再用宝塔面板搭好了wordpress的环境，然后就没有然后了，坐等服务器过期后，就开始觉醒。这就是我后来用github和hexo来写博客的原因啦，毕竟免费，终身享用！ 主要是还是想通过博客约束自己，整理知识，提高自己的学习能力，在这里立个flag吧！ 或许咸鱼也可以翻身吧！ 正文 标题代码： 1234567891011# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题高阶标题（效果和一级标题一样）==========次阶标题（效果和二级标题一样）-------- 效果： 列表2.1 无序列表说明：* 可用 + 或 - 代替 代码： 123* 无序列表项1* 无序列表项2* 无序列表项3 效果： 2.2 有序列表 说明：只要有写数字，无论是否符合常理，有即合理！ 代码： 1231. 有序列表项12. 有序列表项24. 有序列表项3 效果： 分割线说明：一行中用三个以上的-,*,_可以建立分隔线效果一样，即使有空格间隔 代码： 1234---***___ 效果： 区块引用说明：引用可以用 &gt; , 跟标题一样 &gt; 表示 一级引用 ，&gt;&gt; 表示二级引用，依次类推！ 代码： 12345&gt;好句赏析&gt;* 人生若只如初见，何事秋风悲画扇&gt; &gt;这个引用至。。。&gt;* 人生若只如初见，只道当时是寻常&gt; &gt;这个引用至。。。 效果： 好句赏析 人生若只如初见，何事秋风悲画扇 这个引用至。。。 人生若只如初见，只道当时是寻常 这个引用至。。。 链接说明：链接有两种行内式和参数式，格式大同小异，其中链接标题可不写。 行内式 格式：[链接文字] (链接地址”链接标题”) 参数式 格式：[链接文字][参数] [参数]:链接地址”链接标题” 注意：[参数]前不能有字符位！ 代码： 123 [行内式百度链接](https://www.baidu.com&quot;百度&quot;) [参数式网易链接][var][var]:http://www.163.com&quot;网易&quot; 效果： 行内式百度链接 参数式网易链接 图片说明：图片与链接相似，也有两种方法，唯一不同只是前面加多个“!”，直接上代码！代码： 1234&lt;!--说明：![图片Alt](图片地址&quot;图片Title&quot;)--&gt;![源氏行内式网络图片](https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=955831500,3298646975&amp;fm=27&amp;gp=0.jpg&quot;源氏行内式网络图片&quot;)![源氏参数式相对路径图片][1][1]: /images/markdown语法简介/pictrue.png 效果： 代码框说明：单行用 “`“ ，多行用三个 “`“ , “`“ 一般位于”Tab”键上方！代码即效果： 我是一个单行代码框,我非常自卑 12我是一个多行代码框我非常骄傲 表格说明：表格采用的是” | “,” : “,” - “来组成边框，有点所画即所得注意：”:——“表示左对齐，其它类推代码： 12345姓名|性别|分数:------|:------:|------:寻欢|男|100小凤|男|100留香|男|100 效果： 姓名 性别 分数 寻欢 男 100 小凤 男 100 留香 男 100 强调说明：通过一个或者两个”*”或”_”包围实现代码： 123456原生字体*字体倾斜*_字体倾斜_**字体加粗**__字体加粗__~~字体删除~~ 效果：原生字体字体倾斜字体倾斜字体加粗字体加粗字体删除 转义说明：基本跟一般程序语言一样，在字符前直接加”\”代码： 123456\`\\\-\+\*\~ 效果：`\-+*~ 写在后面 这算是我真正的第一篇博客，虽然并不百分百原创，哈哈，继续加油！]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F07%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>惊天之博文</category>
      </categories>
      <tags>
        <tag>惊天之博文</tag>
      </tags>
  </entry>
</search>
